document.addEventListener("DOMContentLoaded", () => {
  const chat = document.getElementById("pseudo-chat");
  const form = document.getElementById("pseudo-form");
  const input = document.getElementById("pseudo-input");

  const services = {
    "–∫–æ–º–±–∏ –º–∞–Ω–∏–∫—é—Ä": "–°–Ω—è—Ç–∏–µ + –∫–æ–º–±–∏-–º–∞–Ω–∏–∫—é—Ä ‚Äî 1200‚ÇΩ.",
    "–º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º": "–°–Ω—è—Ç–∏–µ + –∫–æ–º–±–∏ + —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ + –¥–∏–∑–∞–π–Ω ‚Äî 2000‚ÇΩ.",
    "–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª–∏–Ω—ã": "–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª–∏–Ω—ã —Å –¥–∏–∑–∞–π–Ω–æ–º ‚Äî 2500‚ÇΩ.",
    "–Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –Ω–æ–≥—Ç–µ–π": "–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å + –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω ‚Äî 3000‚ÇΩ.",
    "—Å–Ω—è—Ç–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è": "–°–Ω—è—Ç–∏–µ –±–µ–∑ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è ‚Äî 500‚ÇΩ."
  };

  let pendingService = null;
  let lastIntent = null;
  let lastResponseType = null;

  function addMessage(text) {
    if (!chat) return;
    const bubble = document.createElement("div");
    bubble.className = "bg-white p-2 rounded-xl text-sm shadow whitespace-pre-line";
    bubble.textContent = text;
    chat.appendChild(bubble);
    chat.scrollTop = chat.scrollHeight;
  }

  function clearButtons() {
    if (!chat) return;
    const buttons = chat.querySelectorAll("button");
    buttons.forEach(btn => btn.remove());
  }

  function addFollowupButtons() {
    clearButtons();
    const container = document.createElement("div");
    container.className = "flex gap-2 flex-wrap";

    const btn1 = document.createElement("button");
    btn1.textContent = "üëç –ü–æ–¥—Ö–æ–¥–∏—Ç";
    btn1.className = "bg-green-500 text-white px-3 py-1 rounded-xl text-sm";
    btn1.onclick = () => addMessage(randomResponse([
      "ü¶ä –û—Ç–ª–∏—á–Ω–æ! –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è üíÖ",
      "ü¶ä –ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä ‚Äî –¥–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏ üíñ",
      "ü¶ä –í—Å—ë –∑–∞–ø–∏—Å–∞–ª. –î–æ —Å–≤—è–∑–∏! üå∏"
    ]));

    const btn2 = document.createElement("button");
    btn2.textContent = "‚ùì –£—Ç–æ—á–Ω–∏—Ç—å";
    btn2.className = "bg-yellow-400 text-white px-3 py-1 rounded-xl text-sm";
    btn2.onclick = showServiceList;

    const btn3 = document.createElement("button");
    btn3.textContent = "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è";
    btn3.className = "bg-pink-500 text-white px-3 py-1 rounded-xl text-sm";
    btn3.onclick = () => window.location.href = "https://t.me/foxold_a";

    container.append(btn1, btn2, btn3);
    chat.append(container);
    chat.scrollTop = chat.scrollHeight;
  }

  function showServiceList() {
    clearButtons();
    if (lastResponseType !== 'serviceList') {
      addMessage("ü¶ä –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥:");
      lastResponseType = 'serviceList';
    }
    const container = document.createElement("div");
    container.className = "flex gap-2 flex-wrap";

    Object.keys(services).forEach((key) => {
      const btn = document.createElement("button");
      btn.textContent = capitalize(key);
      btn.className = "bg-gray-200 text-black px-3 py-1 rounded-xl text-sm";
      btn.onclick = () => handleUserInput(key);
      container.appendChild(btn);
    });

    chat.append(container);
    chat.scrollTop = chat.scrollHeight;
  }

  function addInlineConfirmButtons() {
    clearButtons();
    const container = document.createElement("div");
    container.className = "flex gap-2";

    const btnYes = document.createElement("button");
    btnYes.textContent = "üëç –î–∞";
    btnYes.className = "bg-green-500 text-white px-3 py-1 rounded-xl text-sm";
    btnYes.onclick = () => {
      addMessage("–í—ã: –î–∞");
      addMessage(`ü¶ä ${services[pendingService]}\n–ó–∞–ø–∏—à–µ–º –≤–∞—Å?`);
      lastIntent = pendingService;
      pendingService = null;
      addFollowupButtons();
    };

    const btnNo = document.createElement("button");
    btnNo.textContent = "‚ùå –ù–µ—Ç";
    btnNo.className = "bg-gray-400 text-white px-3 py-1 rounded-xl text-sm";
    btnNo.onclick = () => {
      addMessage("–í—ã: –ù–µ—Ç");
      addMessage("ü¶ä –•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞.");
      showServiceList();
      pendingService = null;
    };

    container.append(btnYes, btnNo);
    chat.append(container);
    chat.scrollTop = chat.scrollHeight;
  }

  function capitalize(text) {
    return text.toLocaleLowerCase().replace(/^./u, ch => ch.toLocaleUpperCase());
  }

  function normalize(text) {
    return text.toLowerCase().replace(/[^\w\s–∞-—è—ë]/gi, "").trim();
  }

  function randomResponse(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
  }

  function matchService(text) {
    text = normalize(text);
    for (let key in services) {
      if (normalize(key) === text) return { exact: true, name: key };
    }
    if (text.length >= 3) {
      for (let key in services) {
        if (normalize(key).includes(text) || text.includes(normalize(key))) {
          return { exact: false, name: key };
        }
      }
    }
    return null;
  }

  function handleUserInput(message) {
    addMessage("–í—ã: " + message);
    const lower = message.toLowerCase().trim();

    if (/—Ö—É–π|–ø–∏–∑–¥|–±–ª—è–¥|–µ–±–∞|—Å—É–∫–∞|—á–º–æ|—Ç—É–ø–∞|–ø–æ—à–ª–∞/i.test(lower)) {
      addMessage("ü¶ä –î–∞–≤–∞–π –ø–æ-–¥–æ–±—Ä–æ–º—É ‚Äî —É –Ω–∞—Å —Ç—É—Ç –∫—Ä–∞—Å–æ—Ç–∞ –∏ —É—é—Ç ‚ú®");
      lastResponseType = 'softWarning';
      return;
    }

    if (/^(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|—Ö–∞–π|–¥–æ–±—Ä—ã–π –¥–µ–Ω—å|–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ|–≤–µ—á–µ—Ä)/i.test(lower)) {
      addMessage(randomResponse([
        "ü¶ä –ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! –Ø –§–æ–∫—Å–∏ üíÖ –ì–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Å –Ω–æ–≥–æ—Ç–æ—á–∫–∞–º–∏!",
        "ü¶ä –ü—Ä–∏–≤–µ—Ç–∏–∫! –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–µ–≥–æ–¥–Ω—è ‚Äî –Ω—é–¥, –±–ª—ë—Å—Ç–∫–∏ –∏–ª–∏ –∫–æ—à–∞—á–∏–π –≥–ª–∞–∑? üòò",
        "ü¶ä –°–∞–ª—é—Ç! –î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º —á—Ç–æ-—Ç–æ —Å—Ç–∏–ª—å–Ω–æ–µ –≤–º–µ—Å—Ç–µ üåà"
      ]));
      lastResponseType = 'greeting';
      return;
    }

    if (/–∫–∞–∫ (–¥–µ–ª–∞|—Ç—ã)/i.test(lower)) {
      addMessage(randomResponse([
        "ü¶ä –£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –¢–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏–ª–∞ –Ω–æ–≤—ã–π –¥–∏–∑–∞–π–Ω —Å –ª–∞–≤–∞–Ω–¥–æ–π üíú",
        "ü¶ä –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª(–∞)! –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ ‚Äî –∫–∞–∫ —Å–≤–µ–∂–∏–π –º–∞–Ω–∏–∫—é—Ä ‚ú®",
        "ü¶ä –í—Å—ë —Å—É–ø–µ—Ä, —Ç–æ–ª—å–∫–æ –∫–æ—Ñ–µ –æ–ø—è—Ç—å –æ—Å—Ç—ã–ª üòπ –ê —É —Ç–µ–±—è –∫–∞–∫ –¥–µ–Ω—å –∏–¥—ë—Ç?"
      ]));
      lastResponseType = 'mood';
      return;
    }

    if (/–∫–∞–∫.*–∑–∞–ø–∏—Å|–º–æ–∂–Ω–æ.*–∑–∞–ø–∏—Å|–∑–∞–ø–∏—à|–∑–∞–ø–∏—Å–∞—Ç—å—Å—è/i.test(lower)) {
      addMessage("ü¶ä –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üí¨ –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá");
      addFollowupButtons();
      lastResponseType = 'booking';
      return;
    }

    if (/—á—Ç–æ.*—É–º–µ–µ—à—å|—á—Ç–æ.*–º–æ–∂–µ—à—å|—Ç—ã –∫—Ç–æ|—á–µ–º.*–∑–∞–Ω–∏–º–∞–µ—à—å—Å—è/i.test(lower)) {
      addMessage("ü¶ä –Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ —É—Å–ª—É–≥–∏, –ø–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å –¥–∏–∑–∞–π–Ω, –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–π—Å –∏ –∑–∞–ø–∏—Å–∞—Ç—å —Ç–µ–±—è üíÖ");
      showServiceList();
      lastResponseType = 'about';
      return;
    }

    if (/–ø–æ–º–æ–≥–∏|–Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å|–ø–æ–¥—Å–∫–∞–∂–∏/i.test(lower)) {
      addMessage("ü¶ä –ö–æ–Ω–µ—á–Ω–æ, —è —Ä—è–¥–æ–º! –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ —É—Å–ª—É–≥–∏, –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–π—Å –∏–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å —Ç–µ–±—è üíÖ");
      showServiceList();
      lastResponseType = 'help';
      return;
    }

    if (/—Ä–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ[- ]?–Ω–∏–±—É–¥—å/i.test(lower)) {
      addMessage(randomResponse([
        "ü¶ä –•–º–º‚Ä¶ –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –ª–µ—Ç–Ω–∏–µ —Ç—Ä–µ–Ω–¥—ã üíÖ –ò–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω—é–¥–∞. –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ?",
        "ü¶ä –ê –¥–∞–≤–∞–π –ø–æ–≥–æ–≤–æ—Ä–∏–º –ø—Ä–æ –¥–∏–∑–∞–π–Ω —Å –±–ª—ë—Å—Ç–∫–∞–º–∏? –ò–ª–∏ —Ç–µ–±–µ —Ö–æ—á–µ—Ç—Å—è –∫–ª–∞—Å—Å–∏–∫—É —Å–µ–≥–æ–¥–Ω—è?",
        "ü¶ä –£ –º–µ–Ω—è –≤ –≥–æ–ª–æ–≤–µ —Å—Ç–æ–ª—å–∫–æ –∏–¥–µ–π‚Ä¶ –° —á–µ–≥–æ –Ω–∞—á–Ω—ë–º: —Ñ—Ä–µ–Ω—á, –æ–º–±—Ä–µ –∏–ª–∏ —Ä–æ—Å–ø–∏—Å—å –∫–∏—Å—Ç—å—é?"
      ]));
      lastResponseType = 'smalltalk';
      return;
    }

    if (/—É—Å–ª—É–≥|—á—Ç–æ.*–¥–µ–ª–∞–µ—à—å|–ø–æ–∫–∞–∂–∏|–µ—Å—Ç—å|–ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å/i.test(lower)) {
      if (lastResponseType !== 'serviceList') {
        addMessage("ü¶ä –ö–æ–Ω–µ—á–Ω–æ, –≤–æ—Ç –º–æ–∏ —É—Å–ª—É–≥–∏ üëá");
        showServiceList();
        lastResponseType = 'serviceList';
      }
      return;
    }

    if (/—Ä–∞—Å—Å–∫–∞–∂–∏|–ø—Ä–æ/i.test(lower)) {
      const found = matchService(message);
      if (found) {
        addMessage(`ü¶ä ${services[found.name]}\n–ó–∞–ø–∏—à–µ–º –≤–∞—Å?`);
        lastIntent = found.name;
        addFollowupButtons();
        lastResponseType = 'serviceExact';
      } else {
        if (lastResponseType !== 'serviceList') {
          addMessage("ü¶ä –û —á—ë–º –∏–º–µ–Ω–Ω–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å? –í–æ—Ç —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥:");
          showServiceList();
          lastResponseType = 'serviceList';
        }
      }
      return;
    }

    if (/—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä/i.test(lower)) {
      addMessage(randomResponse([
        "ü¶ä –í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üíñ –ù–∞–¥–µ—é—Å—å, —Å–∫–æ—Ä–æ —É–≤–∏–¥–∏–º—Å—è!",
        "ü¶ä –û–±—Ä–∞—â–∞–π—Å—è, —è —Ç—É—Ç 24/7 ‚òï",
        "ü¶ä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ò–¥–µ–∞–ª—å–Ω—ã–µ –Ω–æ–≥—Ç–∏ ‚Äî –º–æ—è –º–∏—Å—Å–∏—è ‚ú®"
      ]));
      lastResponseType = 'thanks';
      return;
    }

    if (/–ø–æ–∫–∞|–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è|–±–∞–π|—É–≤–∏–¥–∏–º—Å—è|—á–∞–æ/i.test(lower)) {
      addMessage(randomResponse([
        "ü¶ä –ü–æ–∫–∞-–ø–æ–∫–∞! –£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—è –∏ —à–∏–∫–∞—Ä–Ω—ã—Ö –Ω–æ–≥—Ç–µ–π üíñ",
        "ü¶ä –î–æ —Å–∫–æ—Ä–æ–≥–æ, –∫—Ä–∞—Å–æ—Ç–∫–∞! üíÖ",
        "ü¶ä –û–±–Ω–∏–º–∞—é! –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–∞–Ω–∏–∫—é—Ä–∞ üå∑"
      ]));
      lastResponseType = 'bye';
      return;
    }

    const match = matchService(message);
    if (match) {
      if (match.exact) {
        addMessage(`ü¶ä ${services[match.name]}\n–ó–∞–ø–∏—à–µ–º –≤–∞—Å?`);
        lastIntent = match.name;
        addFollowupButtons();
        lastResponseType = 'serviceExact';
      } else {
        pendingService = match.name;
        addMessage(`ü¶ä –í—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É \"${capitalize(match.name)}\"?`);
        addInlineConfirmButtons();
        lastResponseType = 'serviceConfirm';
      }
    } else {
      if (message.length <= 2) {
        if (lastResponseType !== 'serviceList') {
          addMessage("ü¶ä –ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª–∞... –î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞?");
          showServiceList();
          lastResponseType = 'serviceList';
        }
        return;
      }
      addMessage("ü¶ä –ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª–∞... –î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞?");
      showServiceList();
      lastResponseType = 'fallback';
    }
  }

  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const message = input.value.trim();
    if (!message) return;
    input.value = "";
    handleUserInput(message);
  });

  setTimeout(() => {
    if (chat && chat.childElementCount === 0) {
      addMessage("ü¶ä –ü—Ä–∏–≤–µ—Ç, —è –§–æ–∫—Å–∏. –°–ø—Ä–æ—Å–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!");
      setTimeout(() => {
        addMessage("ü¶ä –Ø –º–æ–≥—É:\nüíÖ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ —É—Å–ª—É–≥–∏\nüí¨ –ø–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å –¥–∏–∑–∞–π–Ω\nüìÖ –∑–∞–ø–∏—Å–∞—Ç—å —Ç–µ–±—è\n\n–ù–∞–ø–∏—à–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–∫–æ–º–±–∏ –º–∞–Ω–∏–∫—é—Ä¬ª –∏–ª–∏ ¬´—Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª ‚Äî –∏ —è –≤—Å—ë —Å–¥–µ–ª–∞—é üß°");
      }, 3000);
    }
  }, 1000);
});
