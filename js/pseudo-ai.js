<script>
document.addEventListener("DOMContentLoaded", () => {
  const chat = document.getElementById("pseudo-chat");
  const form = document.getElementById("pseudo-form");
  const input = document.getElementById("pseudo-input");

  const services = {
    "–∫–æ–º–±–∏ –º–∞–Ω–∏–∫—é—Ä": "–°–Ω—è—Ç–∏–µ + –∫–æ–º–±–∏-–º–∞–Ω–∏–∫—é—Ä ‚Äî 1200‚ÇΩ.",
    "–º–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º": "–°–Ω—è—Ç–∏–µ + –∫–æ–º–±–∏ + —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ + –¥–∏–∑–∞–π–Ω ‚Äî 2000‚ÇΩ.",
    "–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª–∏–Ω—ã": "–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª–∏–Ω—ã —Å –¥–∏–∑–∞–π–Ω–æ–º ‚Äî 2500‚ÇΩ.",
    "–Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –Ω–æ–≥—Ç–µ–π": "–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å + –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω ‚Äî 3000‚ÇΩ.",
    "—Å–Ω—è—Ç–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è": "–°–Ω—è—Ç–∏–µ –±–µ–∑ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è ‚Äî 500‚ÇΩ."
  };

  let pendingService = null;
  let lastIntent = null;

  function addMessage(text) {
    const bubble = document.createElement("div");
    bubble.className = "bg-white p-2 rounded-xl text-sm shadow whitespace-pre-line";
    bubble.textContent = text;
    chat.appendChild(bubble);
    chat.scrollTop = chat.scrollHeight;
  }

  function clearButtons() {
    chat.querySelectorAll("button").forEach(btn => btn.remove());
  }

  function addFollowupButtons() {
    clearButtons();
    const container = document.createElement("div");
    container.className = "flex gap-2 flex-wrap";

    const btn1 = document.createElement("button");
    btn1.textContent = "üëç –ü–æ–¥—Ö–æ–¥–∏—Ç";
    btn1.className = "bg-green-500 text-white px-3 py-1 rounded-xl text-sm";
    btn1.onclick = () => addMessage(randomResponse([
      "ü¶ä –û—Ç–ª–∏—á–Ω–æ! –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è üíÖ",
      "ü¶ä –ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä ‚Äî –¥–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏ üíñ",
      "ü¶ä –í—Å—ë –∑–∞–ø–∏—Å–∞–ª. –î–æ —Å–≤—è–∑–∏! üå∏"
    ]));

    const btn2 = document.createElement("button");
    btn2.textContent = "‚ùì –£—Ç–æ—á–Ω–∏—Ç—å";
    btn2.className = "bg-yellow-400 text-white px-3 py-1 rounded-xl text-sm";
    btn2.onclick = showServiceList;

    const btn3 = document.createElement("button");
    btn3.textContent = "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è";
    btn3.className = "bg-pink-500 text-white px-3 py-1 rounded-xl text-sm";
    btn3.onclick = () => window.location.href = "https://t.me/foxold_a";

    container.append(btn1, btn2, btn3);
    chat.append(container);
    chat.scrollTop = chat.scrollHeight;
  }

  function showServiceList() {
    clearButtons();
    addMessage("ü¶ä –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥:");
    const container = document.createElement("div");
    container.className = "flex gap-2 flex-wrap";

    Object.keys(services).forEach((key) => {
      const btn = document.createElement("button");
      btn.textContent = capitalize(key);
      btn.className = "bg-gray-200 text-black px-3 py-1 rounded-xl text-sm";
      btn.onclick = () => handleUserInput(key);
      container.appendChild(btn);
    });

    chat.append(container);
    chat.scrollTop = chat.scrollHeight;
  }

  function addInlineConfirmButtons() {
    clearButtons();
    const container = document.createElement("div");
    container.className = "flex gap-2";

    const btnYes = document.createElement("button");
    btnYes.textContent = "üëç –î–∞";
    btnYes.className = "bg-green-500 text-white px-3 py-1 rounded-xl text-sm";
    btnYes.onclick = () => {
      addMessage("–í—ã: –î–∞");
      addMessage(`ü¶ä ${services[pendingService]}\n–ó–∞–ø–∏—à–µ–º –≤–∞—Å?`);
      lastIntent = pendingService;
      pendingService = null;
      addFollowupButtons();
    };

    const btnNo = document.createElement("button");
    btnNo.textContent = "‚ùå –ù–µ—Ç";
    btnNo.className = "bg-gray-400 text-white px-3 py-1 rounded-xl text-sm";
    btnNo.onclick = () => {
      addMessage("–í—ã: –ù–µ—Ç");
      addMessage("ü¶ä –•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞.");
      showServiceList();
      pendingService = null;
    };

    container.append(btnYes, btnNo);
    chat.append(container);
    chat.scrollTop = chat.scrollHeight;
  }

  function capitalize(text) {
    return text.toLocaleLowerCase().replace(/^./u, ch => ch.toLocaleUpperCase());
  }

  function normalize(text) {
    return text.toLowerCase().replace(/[^\w\s–∞-—è—ë]/gi, "").trim();
  }

  function randomResponse(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
  }

  function matchService(text) {
    text = normalize(text);
    for (let key in services) {
      if (normalize(key) === text) return { exact: true, name: key };
    }
    for (let key in services) {
      if (normalize(key).includes(text) || text.includes(normalize(key))) {
        return { exact: false, name: key };
      }
    }
    return null;
  }

  function handleUserInput(message) {
    addMessage("–í—ã: " + message);
    const match = matchService(message);

    if (match) {
      if (match.exact) {
        addMessage(`ü¶ä ${services[match.name]}\n–ó–∞–ø–∏—à–µ–º –≤–∞—Å?`);
        lastIntent = match.name;
        addFollowupButtons();
      } else {
        pendingService = match.name;
        addMessage(`ü¶ä –í—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É "${capitalize(match.name)}"?`);
        addInlineConfirmButtons();
      }
    } else {
      if (/—Å–ø–∞—Å–∏–±–æ/i.test(message)) {
        addMessage(randomResponse([
          "ü¶ä –í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –ù–∞–¥–µ—é—Å—å, —Å–∫–æ—Ä–æ —É–≤–∏–¥–∏–º—Å—è ‚ú®",
          "ü¶ä –û–±—Ä–∞—â–∞–π—Å—è, —Ä–∞–¥–∞ –ø–æ–º–æ—á—å üå∑"
        ]));
      } else if (/–ø–æ–∫–∞|–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è|–±–∞–π/i.test(message)) {
        addMessage("ü¶ä –ü–æ–∫–∞-–ø–æ–∫–∞! –£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—è –∏ —à–∏–∫–∞—Ä–Ω—ã—Ö –Ω–æ–≥—Ç–µ–π üíñ");
      } else {
        addMessage("ü¶ä –ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª–∞... –î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞?");
        showServiceList();
      }
    }
  }

  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const message = input.value.trim();
    if (!message) return;
    input.value = "";
    handleUserInput(message);
  });

  // –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ —Ç–∞–π–º–µ—Ä (–µ—Å–ª–∏ —Ç–∏—à–∏–Ω–∞)
  setTimeout(() => {
    if (chat.childElementCount === 0) {
      addMessage("ü¶ä –ü—Ä–∏–≤–µ—Ç, —è –§–æ–∫—Å–∏. –°–ø—Ä–æ—Å–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!");
    }
  }, 1000);
});
</script>
